import json

from openai import AzureOpenAI
client = AzureOpenAI(
    api_version="2024-02-01",
     azure_endpoint="https://opencsg-us.openai.azure.com/",
     api_key="af7aabe2e77b41b1a89452ce694658b5"
)
prompt= [{'role': 'system',
          'content': 'You are an autonomous intelligent agent tasked with navigating a web browser. You will be given web-based tasks. These tasks will be accomplished through the use of specific actions you can issue.\n\nHere\'s the information you\'ll have:\nThe user\'s objective: This is the task you\'re trying to complete.\nThe current web page\'s accessibility tree: This is a simplified representation of the webpage, providing key information.\nThe current web page\'s URL: This is the page you\'re currently navigating.\nThe open tabs: These are the tabs you have open.\nThe previous action: This is the action you just performed. It may be helpful to track your progress.\n\nThe actions you can perform fall into several categories:\n\nPage Operation Actions:\n`click [id]`: This action clicks on an element with a specific id on the webpage.\n`type [id] [content] [press_enter_after=0|1]`: Use this to type the content into the field with id. By default, the "Enter" key is pressed after typing unless press_enter_after is set to 0.\n`hover [id]`: Hover over an element with id.\n`press [key_comb]`:  Simulates the pressing of a key combination on the keyboard (e.g., Ctrl+v).\n`scroll [direction=down|up]`: Scroll the page up or down.\n\nTab Management Actions:\n`new_tab`: Open a new, empty browser tab.\n`tab_focus [tab_index]`: Switch the browser\'s focus to a specific tab using its index.\n`close_tab`: Close the currently active tab.\n\nURL Navigation Actions:\n`goto [url]`: Navigate to a specific URL.\n`go_back`: Navigate to the previously viewed page.\n`go_forward`: Navigate to the next page (if a previous \'go_back\' action was performed).\n\nCompletion Action:\n`stop [answer]`: Issue this action when you believe the task is complete. If the objective is to find a text-based answer, provide the answer in the bracket. If you believe the task is impossible to complete, provide the answer as "N/A" in the bracket.\n\nHomepage:\nIf you want to visit other websites, check out the homepage at http://homepage.com. It has a list of websites you can visit.\nhttp://homepage.com/password.html lists all the account name and password for the websites. You can use them to log in to the websites.\n\nTo be successful, it is very important to follow the following rules:\n1. You should only issue an action that is valid given the current observation\n2. You should only issue one action at a time.\n3. You should follow the examples to reason step by step and then issue the next action.\n4. Generate the action in the correct format. Start with a "In summary, the next action I will perform is" phrase, followed by action inside ``````. For example, "In summary, the next action I will perform is ```click [1234]```".\n5. Issue stop action when you think you have achieved the objective. Don\'t generate anything after stop.'},
         {'role': 'system', 'name': 'example_user',
          'content': "OBSERVATION:\n[1744] link 'HP CB782A#ABA 640 Inkjet Fax Machine (Renewed)'\n\t\t[1749] StaticText '$279.49'\n\t\t[1757] button 'Add to Cart'\n\t\t[1760] button 'Add to Wish List'\n\t\t[1761] button 'Add to Compare'\nURL: http://onestopmarket.com/office-products/office-electronics.html\nOBJECTIVE: What is the price of HP Inkjet Fax Machine\nPREVIOUS ACTION: None"},
         {'role': 'system', 'name': 'example_assistant',
          'content': "Let's think step-by-step. This page list the information of HP Inkjet Fax Machine, which is the product identified in the objective. Its price is $279.49. I think I have achieved the objective. I will issue the stop action with the answer. In summary, the next action I will perform is ```stop [$279.49]```"},
         {'role': 'system', 'name': 'example_user',
          'content': "OBSERVATION:\n[164] textbox 'Search' focused: True required: False\n[171] button 'Go'\n[174] link 'Find directions between two points'\n[212] heading 'Search Results'\n[216] button 'Close'\nURL: http://openstreetmap.org\nOBJECTIVE: Show me the restaurants near CMU\nPREVIOUS ACTION: None"},
         {'role': 'system', 'name': 'example_assistant',
          'content': 'Let\'s think step-by-step. This page has a search box whose ID is [164]. According to the nominatim rule of openstreetmap, I can search for the restaurants near a location by "restaurants near". I can submit my typing by pressing the Enter afterwards. In summary, the next action I will perform is ```type [164] [restaurants near CMU] [1]```'},
         {'role': 'user',
          'content': "OBSERVATION:\n0: Models5cope\n1: 首页\n2: 模型库\n3: 数据集\n4: 创空间\n5: AIGC专区\n6: 文档中心\n7: 社区\n8: QGitHub\n9: 返回旧日版\n10: Q搜索您感兴趣的内.\n11: 1Paraformer语音识别-中文-通用-16k-离线-large-pytorch\n12: 语音识别\n13: Non-autoregressive\n14: 开源协议：Apache License 2.0audio\n15: cnFunASRParaformer\n16: Alibaba\n17: INTERSPEECH2022\n18: ·ModelScopeInferenceDemo\n19: ·SwingDeploy\n20: beta\n21: @通义实验室提供|20055950下载丨2024-02-01更新\n22: Notebook快速开发\n23: 部署\n24: 收藏\n25: + 加入合集\n26: 模型介绍\n27: 模型文件\n28: 交流反馈41\n29: Paraformer-large模型介绍\n30: 本内容由通义实验室提供\n31: 模型898数据集97创空间8\n32: Highlights\n33: ■在线体验\n34: ·热词版本：Paraformer-large热词版模型支持热词定制功能，基于提供的热词列表进行激励增强，提升热词的召回率和\n35: 准确率。\n36: ·长音频版本：Paraformer-large长音频模型，集成VAD、ASR、标点与时间戳功能，可直接对时长为数小时音频进行识\n37: 测试内容更换示例\n38: 别，并输出带标点文字与时间戳。\n39: FunASR开源项目介绍\n40: 0:00/0:00\n41: FunASR希望在语音识别的学术研究和工业应用之间架起一座桥梁。通过发布工业级语音识别模型的训练和微调，研究人员\n42: 和开发人员可以更方便地进行语音识别模型的研究和生产，并推动语音识别生态的发展。让语音识别更有趣！\n43: 更换音频\n44: 执行测试\n45: github仓库|最新动态|环境安装|服务部署|模型库|联系我们\n46: 测试结果\n47: SojsonOutput\n48: 模型原理介绍\n49: Paraformer是达摩院语音团队提出的一种高效的非自回归端到端语音识别框架。本项目为Paraformer中文通用语音识别模\n50: 型，采用工业级数万小时的标注音频进行模型训练，保证了模型的通用识别效果。模型可以被应用于语音输入法、语音导\n51: 分享\n52: 航、智能会议纪要等场景。\nURL: https://www.modelscope.cn/models/iic/speech_paraformer-large_asr_nat-zh-cn-16k-common-vocab8404-pytorch\nOBJECTIVE: 检查你当前是否处于某个特定的模型页面，如果是，就告诉我当前页面的地址，然后你的任务就完成了。否则你当前就是在modelscope的模型列表页面中，在'综合排序'的选择项处点击下拉框，点击下拉框中的'下载量排序'这一项，然后找到下载热度第三多的模型，进入这个模型的详情页面，然后根据当前的页面告诉我模型的地址，你的任务就已经结束了，停止其他动作。\nPREVIOUS ACTION: click [49] where [49] is "}]
completion = client.chat.completions.create(
    model="csg-gpt4o",
    messages=prompt,
)
result=completion.choices[0].message.content
print(result)
# with open("result_4o.json","w",encoding="utf-8") as f:
#     json.dump(result,f,ensure_ascii=False,indent=4)